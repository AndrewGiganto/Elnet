@model List<Room>
@{
    ViewData["Title"] = "Our Rooms";
}

<style>
    /* Room styles */
    .hero-section {
        position: relative;
        height: 500px;
        overflow: hidden;
    }

    .slider {
        width: 100%;
        height: 100%;
        position: relative;
    }

    .slide {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-size: cover;
        background-position: center;
        transition: transform 0.5s ease-in-out;
    }

    .hero-content {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
        color: white;
        z-index: 1;
        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
    }

    .hero-content h1 {
        font-size: 3em;
        margin-bottom: 10px;
    }

    .btn-book {
        padding: 10px 20px;
        background-color: #ff7b00;
        color: white;
        border: none;
        border-radius: 5px;
        font-size: 1.2em;
        cursor: pointer;
        margin-top: 20px;
    }

    .navigation {
        position: absolute;
        bottom: 20px;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        gap: 10px;
    }

    .nav-btn {
        background-color: rgba(255, 255, 255, 0.5);
        border: none;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        font-size: 1.5em;
        cursor: pointer;
    }

    .room-listing {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        gap: 30px;
        padding: 40px;
    }

    .room {
        width: 300px;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s;
    }

    .room:hover {
        transform: translateY(-10px);
    }

    .room img {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .room-info {
        padding: 15px;
    }

    .room-info h3 {
        margin: 0 0 10px 0;
    }

    .rating {
        color: #ff7b00;
        font-weight: bold;
    }

    .price {
        font-weight: bold;
        margin: 10px 0;
    }

    .view-details {
        width: 100%;
        padding: 10px;
        background-color: #ff7b00;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }
</style>

    <div class="hero-section">
        <div class="slider" id="slider">
            @foreach (var slide in Model.Take(5))
            {
                <div class="slide" style="background-image: url('@Url.Content(slide.ImagePath)');"></div>
            }
        </div>
        <div class="hero-content">
            <h1>Welcome to BordZHotel</h1>
            <p>Experience luxury and comfort like never before. Our rooms are designed for your perfect stay.</p>
            <button class="btn-book">Book Now</button>
        </div>
        <div class="navigation">
            <button class="nav-btn" onclick="prevSlide()">&#10094;</button>
            <button class="nav-btn" onclick="nextSlide()">&#10095;</button>
        </div>
    </div>

    <h2 style="text-align: center; margin-top: 40px; font-size: 2.5em; color: #333;">Our Hotel Rooms</h2>

    <div class="room-listing">
        @foreach (var room in Model)
        {
            <div class="room">
                <img src="@Url.Content(room.ImagePath)" alt="@room.RoomName">
                <div class="room-info">
                    <h3>@room.RoomName</h3>
                    <p class="rating">@room.Rating</p>
                    <p class="price">$@room.Price/night</p>
                    <a href="@Url.Action(room.DetailsLink, "Home")">
                        <button class="view-details">View Details</button>
                    </a>
                </div>
            </div>
        }
    </div>

@section Scripts {
    <script>
        let currentIndex = 0;
        const slides = document.querySelectorAll('.slide');

        function showSlide(index) {
            slides.forEach((slide, i) => {
                slide.style.transform = `translateX(${100 * (i - index)}%)`;
            });
        }

        function nextSlide() {
            currentIndex = (currentIndex + 1) % slides.length;
            showSlide(currentIndex);
        }

        function prevSlide() {
            currentIndex = (currentIndex - 1 + slides.length) % slides.length;
            showSlide(currentIndex);
        }

        // Automatic slide change
        let autoSlideInterval = setInterval(() => {
            nextSlide();
        }, 5000); // Change slide every 5 seconds

        // Clear interval when hovering over the slider
        const slider = document.getElementById('slider');
        slider.addEventListener('mouseover', () => {
            clearInterval(autoSlideInterval);
        });

        slider.addEventListener('mouseout', () => {
            autoSlideInterval = setInterval(() => {
                nextSlide();
            }, 5000); // Restart the interval
        });

        // Initial call to display the first slide
        showSlide(currentIndex);
    </script>
}
